package com.project.controller;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.project.entity.Payment;
import com.project.service.PaymentServiceImpl;

@WebMvcTest(controllers = {PaymentController.class})
class PaymentControllerTest {
	
	@MockBean
	PaymentServiceImpl paymentService;
	
	@Autowired
	MockMvc mockMvc;

	@Test
	void test_AddPayment() throws Exception {
		Payment p = new Payment();
		p.setPaymentId(1);
		p.setOrderId(1);
		p.setPaymentAmount(100);
		p.setPaymentMethod("cash");
		p.setPaymentStatus("completed");
		
		
		when(paymentService.add(any(Payment.class))).thenReturn(p);
		
		mockMvc.perform( post("/payments/createpayment")
				.contentType(MediaType.APPLICATION_JSON)
				.content(new ObjectMapper().writeValueAsString(p)))
				.andExpect(status().isCreated());
		
	}

//	@Test
//	void testProcessPayment() {
//		fail("Not yet implemented");
//	}
//
	@Test
	void testSearchPayment() throws Exception{
		Payment p = new Payment();
		p.setPaymentId(1);
		p.setOrderId(1);
		p.setPaymentAmount(100);
		p.setPaymentMethod("cash");
		p.setPaymentStatus("completed");
		
		
		when(paymentService.search(any(Integer.class))).thenReturn(p);
		
		mockMvc.perform( get("/payments/{paymentId}", p.getPaymentId())
				.contentType(MediaType.APPLICATION_JSON))
				.andExpect(status().isFound());
	}
//
//	@Test
//	void testRemovePayment() {
//		fail("Not yet implemented");
//	}
//
	@Test
	void testGetAllPayments() {
		Payment p = new Payment();
		p.setPaymentId(1);
		p.setOrderId(1);
		p.setPaymentAmount(100);
		p.setPaymentMethod("cash");
		p.setPaymentStatus("completed");
		
		Payment p1 = new Payment();
		p1.setPaymentId(2);
		p1.setOrderId(2);
		p1.setPaymentAmount(200);
		p1.setPaymentMethod("upi");
		p1.setPaymentStatus("pending");
		
		
		Payment p2 = new Payment();
		p2.setPaymentId(3);
		p2.setOrderId(3);
		p2.setPaymentAmount(300);
		p2.setPaymentMethod("upi");
		p2.setPaymentStatus("cancelled");
		
		List<Payment> list = Arrays.asList(p,p1,p2);
		
		when(paymentService.getAll()).then(list);
	}
//
//	@Test
//	void testUpdatePayment() {
//		fail("Not yet implemented");
//	}

}
