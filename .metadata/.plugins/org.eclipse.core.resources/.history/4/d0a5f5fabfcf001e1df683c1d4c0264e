package com.project.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.project.dto.Order;
import com.project.dto.PaymentRequest;
import com.project.entity.Payment;
import com.project.service.PaymentService;

@RestController
@RequestMapping("/payments")
public class PaymentController {
	
	@Autowired
	PaymentService paymentService;
	
	@PostMapping("create")
	public Payment addPayment(@RequestBody Payment payment) {
		payment.setPaymentDate(payment.getPaymentDate());
		payment.setPaymentStatus(payment.getPaymentStatus());
		return paymentService.add(payment);
	}
	
	
	@PostMapping("createpayment")
	public ResponseEntity<String> processPayment (@RequestBody Order order) {
		Payment payment = new Payment();
		payment.setOrderId(order.getOrderId());
		
		
		paymentService.add(payment);
		
		return ResponseEntity.status(HttpStatus.CREATED).body("Payment Initiated");
	}
	
	
	
	@GetMapping("{paymentId}")
	public Payment searchPayment (@PathVariable long paymentId) {
		
		return paymentService.search(paymentId);
	}
	
	
	@DeleteMapping("delete/{paymentId}")
	public void removePayment(@PathVariable long paymentId) {
		paymentService.remove(paymentId);
	}
	
	
	@GetMapping("")
	public List<Payment> getAllPayments(){
		return paymentService.getAll();
	}
	
	
	
	@PutMapping("updatestatus")
	public Payment updatePayment(@RequestParam long paymentId , @RequestParam String status) {
		return paymentService.updateStatus(paymentId, status);
	}
}
